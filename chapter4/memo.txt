* position
  기본적으로 html은 문서이므로 block이나 inline이 좌에서 우, 상에서 하로 정렬된다.
  이를 벗어나 내가 원하는 위치에 block이나 inline을 구성하고 싶다면 position을 사용해준다.

* containing block
  => position을 사용할 때 참고해야 한다.

* block formatting context 
  => float을 사용할 때 참고해야 한다.

* css stacking context  

* inline / inline-block / block과
* vertical align에 대해 좀 더 자세히 공부하기

* display : flex에 대해서 좀 더 공부하기
* 컨테이닝 블록 : position에 관련된 내용
  - https://developer.mozilla.org/ko/docs/Web/CSS/All_About_The_Containing_Block#%EC%98%88%EC%A0%9C_1

  - static : 가장 가까운 조상 block의 컨텐츠 영역 내부 + 움직임 불가
  - relative : 가장 가까운 조상 block의 컨텐츠 영역 내부 + 움직임 가능
  - absolute : static이 아닌 가장 가까운 조상 block의 컨텐츠 영역 내부 + 움직임 가능
  - fixed : 뷰포트 or 페이지 영역 기준.

* flex
  1) flex container (parent)
  -  flex items의 부모 역할을 하고, items들을 정렬
  -  주축 : flex-direction + flex-wrap
            (박스가 늘어나는 방향 + 박스가 다음줄로 넘어가는 방식)
  -  교차축 : align-item + justify-content
              (자식 요소인 flex items를 정렬한다.)

  2) flex items (child)
  -  flex container 내에서 box 하나 하나의 모양을 결정한다.
  -  flex-basis + flex-grow/flex-shirink
     (박스의 크기 + 크기가 변경되는 방식)
  -  order
     (flex container 안에서 나열되는 flex items의 순서)
  -  align-self
     (flex container가 items를 정렬하지만, 스스로도 정렬 가능)

* grid layout : bootstrap을 포함한 여러 css 라이브러리에서 기본 제공하는 요소

* css 우선순위
  !important > inline style 속성 > id > class > tag element
  같은 순위에서는 뒤에 나올수록 우선순위가 높다.